# So, apparently you can use environment variables with i3. NOTE: these need to be defined when i3 starts.
# You can't define a variable and just refresh i3, since it won't be defined in i3's session.
# Might be a way to set something in i3's running session, but easier to just restart.

# TODO: set colors for bars/dmenu here, use later...

# create/set our ipc socket file
ipc-socket ~/.i3/ipc.sock

#new_window pixel 0
#new_float pixel 0
hide_edge_borders both

# only focus on what I select via keyboard shortcuts, not what the mouse is overing over
focus_follows_mouse no

# L_Super (Win)
#set $mod Mod4
# L_Alt
set $mod Mod1

# Set workspace titles/vars
set $workspace1 1: fus
set $workspace2 2: ro
set $workspace3 3: dah
set $workspace4 4: wuld
set $workspace5 5: nah
set $workspace6 6: kest
set $workspace7 7: sieben
set $workspace8 8: acht
set $workspace9 9: nein
set $workspace10 10: zehn

# Font for window titles
# font xft:Terminus bold 12
# font xft:inconsolata 8
# font xft:lemon 9
font xft:GohuFont 8
# font xft:uushi light 8
# font pango:Monospace 7

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier Mod4
floating_modifier $mod+Control

# start a terminal
bindsym $mod+Return exec urxvt

# kill focused window
bindsym $mod+Shift+w kill

# start dmenu (a program launcher)
# This just executes a locally defined variable. Obviously, if that variable isn't defined,
# you're gonna have a bad time.
bindsym $mod+r exec $DMENU_CMD

# change focus
bindsym $mod+j focus left
bindsym $mod+k focus down
bindsym $mod+l focus up
bindsym $mod+semicolon focus right

# change workspace
bindsym Control+$mod+j workspace prev
bindsym Control+$mod+semicolon workspace next

# move focused window
bindsym $mod+Shift+j move left
bindsym $mod+Shift+k move down
bindsym $mod+Shift+l move up
bindsym $mod+Shift+semicolon move right

# screenshots
# now with OSX-user friendly shortcuts!
bindsym Print exec "scrot -e 'mv $f ~/shots/'"
bindsym $mod+Shift+3 exec "scrot -e 'mv $f ~/shots/'"
bindsym $mod+Print exec "scrot -s -e 'mv $f ~/shots/'"
bindsym $mod+Shift+4 exec "scrot -s -e 'mv $f ~/shots/'"

# passmenu
bindsym $mod+Shift+p exec passmenu

# lock screen
#bindsym Control+Mod1+l exec i3lock -c 000000

# split view
bindsym $mod+h split h
bindsym $mod+backslash split h
bindsym $mod+v split v
bindsym $mod+minus split v

# enter fullscreen mode for the focused container
bindsym $mod+shift+f fullscreen

# change container layout (stacked, tabbed, toggle split)
#bindsym $mod+s layout stacking
#bindsym $mod+t layout tabbed
#bindsym $mod+e layout toggle split
bindsym $mod+Shift+t layout tabbed
bindsym $mod+Shift+e layout toggle split
bindsym $mod+Shift+s layout stacking

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
#bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child

# switch to workspace
bindsym $mod+1 workspace $workspace1
bindsym $mod+2 workspace $workspace2
bindsym $mod+3 workspace $workspace3
bindsym $mod+4 workspace $workspace4
bindsym $mod+5 workspace $workspace5
bindsym $mod+6 workspace $workspace6
bindsym $mod+7 workspace $workspace7
bindsym $mod+8 workspace $workspace8
bindsym $mod+9 workspace $workspace9
bindsym $mod+0 workspace $workspace10

# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+Control+r restart
# exit i3 (logs you out of your X session)
bindsym $mod+Control+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -b 'Yes, exit i3' 'i3-msg exit'"

# volume keys
# '--' is required for in some of the following lines because otherwise it considers "-5%" to be an argument
bindsym XF86AudioMute exec "pactl set-sink-mute 1 toggle"
bindsym XF86AudioLowerVolume exec "pactl -- set-sink-volume 1 -5%"
bindsym XF86AudioRaiseVolume exec "pactl -- set-sink-volume 1 +5%"
# chromebook/other
bindsym Control+F8 exec "pactl set-sink-mute 1 toggle"
bindsym Control+F9 exec "pactl -- set-sink-volume 1 -5%"
bindsym Control+F10 exec "pactl -- set-sink-volume 1 +5%"

# multimedia keys
bindsym XF86AudioPlay exec "playerctl play-pause"
bindsym XF86AudioStop exec "playerctl stop"
bindsym XF86AudioNext exec "playerctl next"
bindsym XF86AudioPrev exec "playerctl previous"
bindsym $mod+Control+Home exec "playerctl play-pause"
bindsym $mod+Control+End exec "playerctl stop"
bindsym $mod+Control+Next exec "playerctl next"
bindsym $mod+Control+Prior exec "playerctl previous"

# brightness keys
bindsym XF86MonBrightnessDown exec xbacklight -dec 5
bindsym XF86MonBrightnessUp exec xbacklight -inc 5
bindsym Control+F6 exec xbacklight -dec 5
bindsym Control+F7 exec xbacklight -inc 5

# calculator!
bindsym XF86Calculator exec gnome-calculator
#XF86Mail
#XF86Search
#XF86HomePage

# snippets
bindsym $mod+Shift+v exec fish -c snippets

# runnar - used to run arbitrary pre-defined scripts
bindsym $mod+Shift+r exec fish -c runnar

# umaluts - quicky script for printing umlauts to cursor position
bindsym $mod+Shift+u exec fish -c umlauts

# tempa-permanently remap middleclick (for chromebook/laptops without an easily-accessible insert key)
# mostly working (doesn't work in luakit, for example)
bindsym $mod+Shift+i exec xdotool type --delay 0 --window (xdotool getactivewindow) (xsel -o)
# hacky work-around, mostly for luakit.... BE FUCKING SURE YOUR MOUSE IS HOVERING OVER WHERE YOU WANT TO PASTE
bindsym $mod+Shift+Control+i exec xdotool click 2

# notes - open notes in vim
# disabled (For now?)
#bindsym $mod+Shift+n exec fish -c nvpy

# resize window (you can also use the mouse for that)
mode "resize" {
  # These bindings trigger as soon as you enter the resize mode

  # Pressing left will shrink the window’s width.
  # Pressing right will grow the window’s width.
  # Pressing up will shrink the window’s height.
  # Pressing down will grow the window’s height.
  bindsym j resize shrink width 10 px or 10 ppt
  bindsym k resize grow height 10 px or 10 ppt
  bindsym l resize shrink height 10 px or 10 ppt
  bindsym semicolon resize grow width 10 px or 10 ppt

  # same bindings, but for the arrow keys
  bindsym Left resize shrink width 10 px or 10 ppt
  bindsym Down resize grow height 10 px or 10 ppt
  bindsym Up resize shrink height 10 px or 10 ppt
  bindsym Right resize grow width 10 px or 10 ppt

  # back to normal: Enter or Escape
  bindsym Return mode "default"
  bindsym Escape mode "default"
}
bindsym $mod+Shift+z mode "resize"

# pressing mod+Shift+m enters container move mode
# Allows us to press a workspace number to move a container to a workspace
set $mode_move_container Which workspace?
mode "$mode_move_container" {
  bindsym 1 move container to workspace $workspace1, workspace $workspace1, mode "default"
  bindsym 2 move container to workspace $workspace2, workspace $workspace2, mode "default"
  bindsym 3 move container to workspace $workspace3, workspace $workspace3, mode "default"
  bindsym 4 move container to workspace $workspace4, workspace $workspace4, mode "default"
  bindsym 5 move container to workspace $workspace5, workspace $workspace5, mode "default"
  bindsym 6 move container to workspace $workspace6, workspace $workspace6, mode "default"
  bindsym 7 move container to workspace $workspace7, workspace $workspace7, mode "default"
  bindsym 8 move container to workspace $workspace8, workspace $workspace8, mode "default"
  bindsym 9 move container to workspace $workspace9, workspace $workspace9, mode "default"
  bindsym 0 move container to workspace $workspace10, workspace $workspace10, mode "default"

  # j/; to move to prev/next workspaces
  bindsym j move container to workspace prev
  bindsym semicolon move container to workspace next

  # back to normal
  bindsym Return mode "default"
  bindsym Escape mode "default"
}
bindsym $mod+Shift+m mode "$mode_move_container"

# pressing mod+Pause will allow us to lock, sleep, etc
set $mode_system System (l) lock, (e) logout, (s) suspend, (h) hibernate, (r) reboot, (Shift+s) shutdown
mode "$mode_system" {
  bindsym l exec fish -c "i3exit lock", mode "default"
  bindsym e exec fish -c "i3exit logout", mode "default"
  bindsym s exec fish -c "i3exit suspend", mode "default"
  bindsym h exec fish -c "i3exit hibernate", mode "default"
  bindsym r exec fish -c "i3exit reboot", mode "default"
  bindsym Shift+s fish -c "i3exit shutdown", mode "default"  

  # back to normal: Enter or Escape
  bindsym Return mode "default"
  bindsym Escape mode "default"
}
bindsym $mod+Pause mode "$mode_system"
bindsym XF86PowerOff mode "$mode_system"
# and now, for the chromebook, until I figure out how to bind Pause to something...
bindsym $mod+Control+Shift+F10 mode "$mode_system"

## notes!
#set $mode_notes Notes (p) personal, (w) work
#mode "$mode_notes" {
  #bindsym p exec nvpy_notes personal
  #bindsym w exec nvpy_notes work
#}
#bindsym $mod+Shift+n mode "$mode_notes"

#########################
# assignment window classes to a workspace
#########################
# browsers
assign [class="Chromium"] $workspace2
for_window [class="Chromium"] layout tabbed
assign [class="Chrome"] $workspace2
for_window [class="Chrome"] layout tabbed
assign [class="Firefox"] $workspace2
for_window [class="Firefox"] layout tabbed
assign [class="luakit"] $workspace2
for_window [class="luakit"] layout tabbed

# code
assign [class="Eclipse"] $workspace4
for_window [class="Eclipse"] layout tabbed
assign [class="jetbrains-idea-ce"] $workspace4
for_window [class="jetbrains-idea-ce"] layout tabbed

# misc
assign [class="Skype"] $workspace8
for_window [class="Skype"] layout tabbed
assign [class="Vncviewer"] $workspace8
for_window [class="CrashPlan"] floating enable
assign [class="Kodi"] $workspace9
for_window [class="Kodi"] fullscreen

# game assignments
assign [class="Steam"] $workspace5
for_window [class="Steam"] layout tabbed
assign [class="Steam.exe"] $workspace5
for_window [class="Steam.exe"] layout tabbed
assign [class="Wine"] $workspace6
for_window [class="Wine"] layout tabbed
assign [class="dota_linux"] $workspace6
assign [title="Kerbal Space Program"] $workspace6
assign [title="eu4"] $workspace6
assign [class="dontstarve_steam"] $workspace6
for_window [class="dontstarve_steam"] fullscreen
assign [class="starbound"] $workspace6
for_window [class="starbound"] fullscreen

# colors
# CFCFCF => light gray
# B5B5B5 => medium-light gray
# 919191 => medium-dark gray
# 252525 => dark gray
# colorclass            #border   #background  #text     #indicator
client.focused          #919191   #919191      #252525   #49BBD2
client.focused_inactive #B5B5B5   #B5B5B5      #252525   #49BBD2
client.unfocused        #CFCFCF   #CFCFCF      #888888   #2e9ef4
client.urgent           #2f343a   #900000      #ffffff   #900000

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
bar {
  # mode dock
  position bottom

  workspace_buttons yes

  separator_symbol " "

  status_command i3blocks -c ~/.dotfiles/configs/i3/i3blocks_bot

  colors {
    background #CFCFCF
    statusline #FFFFFF
    separator  #FF9900

    # colorclass       #border   #background   #text
    focused_workspace  #919191   #919191       #252525
    active_workspace   #252525   #252525       #268BD2
    inactive_workspace #CFCFCF   #CFCFCF       #888888
    urgent_workspace   #CFCFCF   #CFCFCF       #FE5000
  }
}

# execs
# can use exec to only exec once
# or exec_always to exec on every reload
exec "feh --bg-fill ~/.desktop_bg"
exec "xset r rate 190 40"
#exec "urxvtd -q -o -f"
#exec "urxvtd &"
exec "compton --config ~/.dotfiles/configs/compton.conf -b"
